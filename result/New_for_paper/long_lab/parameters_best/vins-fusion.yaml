%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2  

imu_topic: "/mynteye/imu/data_raw"
image0_topic: "/mynteye/left/image_mono" 
image1_topic: "/mynteye/right/image_mono"
#image0_topic: "/sync/limage"
#image1_topic: "/sync/rimage"
output_path: "/home/why/SLAM_WS/VINS-FUISON-src/src/VINS-Fusion/result/"

cam0_calib: "left_pinhole.yaml"
cam1_calib: "right_pinhole.yaml"
#cam0_calib: "left_equ.yaml"
#cam1_calib: "right_equ.yaml"
#cam0_calib: "left_mei.yaml"
#cam1_calib: "right_mei.yaml"
image_width: 640 
image_height: 480
   

# Extrinsic parameter between IMU and Camera. 
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ 9.9991699275790169e-01, 2.0824211772780127e-03,  1.2714995715094754e-02, -4.0389035704122049e-02,
#            2.0958781950690076e-03, -9.9999725750074253e-01,-1.0451246747181326e-03, -7.6224495231548232e-03,
#            1.2712784454472915e-02, 1.0716870040708981e-03, -9.9991861498742973e-01, -1.1522266944883600e-02, 
#            0., 0., 0., 1. ]
# body_T_cam1: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ 9.9996554214094502e-01, 6.0995333840083953e-03,   5.6311831139835272e-03,  7.5796639511835032e-02,
#            6.1342934126481508e-03, -9.9996211129386059e-01, -6.1762789001746704e-03, -5.6558008796142069e-03,
#            5.5932973364007411e-03, 6.2106094083083695e-03,  -9.9996507106782695e-01, -1.6710542015779477e-02, 
#            0., 0., 0., 1. ]

body_T_cam0: !!opencv-matrix
  rows: 4
  cols: 4
  dt: d
  data: [0.99998445,  0.00555305,  0.00052062, -0.04777362,
         0.00555071, -0.99997494,  0.00439407, -0.00223731,
         0.00054501, -0.00439112, -0.99999021, -0.00160071,
         0, 0, 0, 1]
body_T_cam1: !!opencv-matrix
  rows: 4
  cols: 4
  dt: d
  data: [0.999973274595258,  -0.002601200342107,  -0.006817504507389,  -0.168177785996474,
        -0.002646217132771,  -0.999974621713456,  -0.006602087566042,  -0.001904090420827,
        -0.006800143778317,   0.006619870064106,  -0.999954955621817,  -0.000942700119528,
                         0,                   0,                   0,   1.000000000000000]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 170            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.01          # accelerometer measurement noise standard deviation. 
gyr_n: 0.001         # gyroscope measurement noise standard deviation.     
acc_w: 0.0001        # accelerometer bias random work noise standard deviation.  
gyr_w: 0.00001       # gyroscope bias random work noise standard deviation.     
#g_norm: 9.81007     # gravity magnitude

#acc_n: 0.0268014618074         # accelerometer measurement noise standard deviation. #0.599298904976
#gyr_n: 0.00888232829671        # gyroscope measurement noise standard deviation.     #0.198614898699
#acc_w: 0.00262960861593         # accelerometer bias random work noise standard deviation.  #0.02
#gyr_w: 0.000379565782927       # gyroscope bias random work noise standard deviation.     #4.0e-5

g_norm: 9.81007     # gravity magnitude
#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.003                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/zhangs/vins_fusion/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
